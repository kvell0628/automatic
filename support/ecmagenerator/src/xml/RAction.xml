<?xml version="1.0"?>
<unit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:rs="http://www.ribbonsoft.com">
  <class_decl name="RPropertyEvent" />
  <class_decl name="RGraphicsScene" />
  <class_decl name="RGraphicsView" />
  <class_decl name="RDocumentInterface" />
  <class_decl name="RCommandEvent" />
  <class_decl name="RCoordinateEvent" />
  <class_decl name="RDocument" />
  <class_decl name="REntityPickEvent" />
  <class_decl name="RMouseEvent" />
  <class_decl name="RWheelEvent" />
  <class_decl name="RGuiAction" />
  <class_decl name="RStorage" />
  <class_decl name="RTabletEvent" />
  <class_decl name="ROperation" />
  <class name="RAction"
  xsi:noNamespaceSchemaLocation="../class.xsd" isCopyable="false"
  hasShell="false" sharedPointerSupport="false" isQObject="false"
  hasStreamOperator="false" isAbstract="true" isScriptable="true">
    <enum name="ClickMode">
      <value name="PickCoordinate" />
      <value name="PickCoordinateNoSnap" />
      <value name="PickEntity" />
      <value name="PickingDisabled" />
    </enum>
    <constructor>
      <variant>
        <arg type="RGuiAction *" typeName="RGuiAction *"
        name="guiAction" hasDefault="true" default="NULL"
        isConst="false" />
      </variant>
    </constructor>
    <method name="terminate" cppName="terminate" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false" />
    </method>
    <method name="isTerminated" cppName="isTerminated"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false" />
    </method>
    <method name="setOverride" cppName="setOverride"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false" />
    </method>
    <method name="isOverride" cppName="isOverride"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false" />
    </method>
    <method name="setNoState" cppName="setNoState"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="bool" typeName="bool" name="on"
        hasDefault="true" default="true" isConst="false" />
      </variant>
    </method>
    <method name="hasNoState" cppName="hasNoState"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false" />
    </method>
    <method name="setUniqueGroup" cppName="setUniqueGroup"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="QString &amp;" typeName="QString" name="ug"
        isConst="true" />
      </variant>
    </method>
    <method name="getUniqueGroup" cppName="getUniqueGroup"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="QString" isPureVirtual="false" />
    </method>
    <method name="setOverrideBase" cppName="setOverrideBase"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="RAction *" typeName="RAction *" name="base"
        isConst="false" />
      </variant>
    </method>
    <method name="getOverrideBase" cppName="getOverrideBase"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="RAction *" isPureVirtual="false" />
    </method>
    <method name="getGuiAction" cppName="getGuiAction"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="RGuiAction *" isPureVirtual="false" />
    </method>
    <method name="setGuiAction" cppName="setGuiAction"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="RGuiAction *" typeName="RGuiAction *"
        name="guiAction" isConst="false" />
      </variant>
    </method>
    <method name="getGraphicsScenes" cppName="getGraphicsScenes"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="QList &lt; RGraphicsScene * &gt;"
      isPureVirtual="false" />
    </method>
    <method name="getDocument" cppName="getDocument"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="RDocument *" isPureVirtual="false" />
    </method>
    <method name="getDocumentInterface"
    cppName="getDocumentInterface" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="RDocumentInterface *"
      isPureVirtual="false" />
    </method>
    <method name="getStorage" cppName="getStorage"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="RStorage *" isPureVirtual="false" />
    </method>
    <method name="setDocumentInterface"
    cppName="setDocumentInterface" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="RDocumentInterface *"
        typeName="RDocumentInterface *" name="di"
        isConst="false" />
      </variant>
    </method>
    <method name="setClickMode" cppName="setClickMode"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="RAction::ClickMode"
        typeName="RAction::ClickMode" name="m" isConst="false" />
      </variant>
    </method>
    <method name="getClickMode" cppName="getClickMode"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="RAction::ClickMode"
      isPureVirtual="false" />
    </method>
    <method name="beginEvent" cppName="beginEvent"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="true" />
    </method>
    <method name="setGraphicsView" cppName="setGraphicsView"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="true">
        <arg type="RGraphicsView *" typeName="RGraphicsView *"
        name="view" isConst="false" />
      </variant>
    </method>
    <method name="finishEvent" cppName="finishEvent"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="true" />
    </method>
    <method name="enterEvent" cppName="enterEvent"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="true" />
    </method>
    <method name="suspendEvent" cppName="suspendEvent"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="true" />
    </method>
    <method name="resumeEvent" cppName="resumeEvent"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="true" />
    </method>
    <method name="escapeEvent" cppName="escapeEvent"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="true" />
    </method>
    <method name="keyPressEvent" cppName="keyPressEvent"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="true">
        <arg type="QKeyEvent &amp;" typeName="QKeyEvent"
        name="event" isConst="false" />
      </variant>
    </method>
    <method name="keyReleaseEvent" cppName="keyReleaseEvent"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="true">
        <arg type="QKeyEvent &amp;" typeName="QKeyEvent"
        name="event" isConst="false" />
      </variant>
    </method>
    <method name="mousePressEvent" cppName="mousePressEvent"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="true">
        <arg type="RMouseEvent &amp;" typeName="RMouseEvent"
        name="event" isConst="false" />
      </variant>
    </method>
    <method name="mouseMoveEvent" cppName="mouseMoveEvent"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="true">
        <arg type="RMouseEvent &amp;" typeName="RMouseEvent"
        name="event" isConst="false" />
      </variant>
    </method>
    <method name="mouseReleaseEvent" cppName="mouseReleaseEvent"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="true">
        <arg type="RMouseEvent &amp;" typeName="RMouseEvent"
        name="event" isConst="false" />
      </variant>
    </method>
    <method name="mouseDoubleClickEvent"
    cppName="mouseDoubleClickEvent" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="true">
        <arg type="RMouseEvent &amp;" typeName="RMouseEvent"
        name="event" isConst="false" />
      </variant>
    </method>
    <method name="wheelEvent" cppName="wheelEvent"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="true">
        <arg type="RWheelEvent &amp;" typeName="RWheelEvent"
        name="event" isConst="false" />
      </variant>
    </method>
    <method name="tabletEvent" cppName="tabletEvent"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="true">
        <arg type="RTabletEvent &amp;" typeName="RTabletEvent"
        name="event" isConst="false" />
      </variant>
    </method>
    <method name="swipeGestureEvent" cppName="swipeGestureEvent"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="true">
        <arg type="QSwipeGesture &amp;" typeName="QSwipeGesture"
        name="gesture" isConst="false" />
      </variant>
    </method>
    <method name="panGestureEvent" cppName="panGestureEvent"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="true">
        <arg type="QPanGesture &amp;" typeName="QPanGesture"
        name="gesture" isConst="false" />
      </variant>
    </method>
    <method name="pinchGestureEvent" cppName="pinchGestureEvent"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="true">
        <arg type="QPinchGesture &amp;" typeName="QPinchGesture"
        name="gesture" isConst="false" />
      </variant>
    </method>
    <method name="commandEvent" cppName="commandEvent"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="true">
        <arg type="RCommandEvent &amp;" typeName="RCommandEvent"
        name="event" isConst="false" />
      </variant>
    </method>
    <method name="commandEventPreview"
    cppName="commandEventPreview" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="true">
        <arg type="RCommandEvent &amp;" typeName="RCommandEvent"
        name="event" isConst="false" />
      </variant>
    </method>
    <method name="coordinateEvent" cppName="coordinateEvent"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="true">
        <arg type="RCoordinateEvent &amp;"
        typeName="RCoordinateEvent" name="event" isConst="false" />
      </variant>
    </method>
    <method name="coordinateEventPreview"
    cppName="coordinateEventPreview" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="true">
        <arg type="RCoordinateEvent &amp;"
        typeName="RCoordinateEvent" name="event" isConst="false" />
      </variant>
    </method>
    <method name="entityPickEvent" cppName="entityPickEvent"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="true">
        <arg type="REntityPickEvent &amp;"
        typeName="REntityPickEvent" name="event" isConst="false" />
      </variant>
    </method>
    <method name="entityPickEventPreview"
    cppName="entityPickEventPreview" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="true">
        <arg type="REntityPickEvent &amp;"
        typeName="REntityPickEvent" name="event" isConst="false" />
      </variant>
    </method>
    <method name="propertyChangeEvent"
    cppName="propertyChangeEvent" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="true">
        <arg type="RPropertyEvent &amp;" typeName="RPropertyEvent"
        name="event" isConst="false" />
      </variant>
    </method>
    <method name="zoomChangeEvent" cppName="zoomChangeEvent"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="true">
        <arg type="RGraphicsView &amp;" typeName="RGraphicsView"
        name="view" isConst="false" />
      </variant>
    </method>
    <method name="updatePreview" cppName="updatePreview"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="true" />
    </method>
    <method name="applyOperation" cppName="applyOperation"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="true" />
    </method>
    <method name="snap" cppName="snap" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="RVector" isPureVirtual="false">
        <arg type="RMouseEvent &amp;" typeName="RMouseEvent"
        name="event" isConst="false" />
      </variant>
    </method>
  </class>
</unit>
