<?xml version="1.0"?>
<unit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:rs="http://www.ribbonsoft.com">
  <class name="RDimRotatedData"
  xsi:noNamespaceSchemaLocation="../class.xsd" isCopyable="true"
  hasShell="false" sharedPointerSupport="false" isQObject="false"
  hasStreamOperator="false" isAbstract="false" isScriptable="true">
    <baseClass name="RDimLinearData" specifier="public" />
    <constructor>
      <variant />
      <variant>
        <arg type="RDimensionData &amp;" typeName="RDimensionData"
        name="dimData" isConst="true" />
        <arg type="RVector &amp;" typeName="RVector"
        name="extensionPoint1" isConst="true" />
        <arg type="RVector &amp;" typeName="RVector"
        name="extensionPoint2" isConst="true" />
        <arg type="double" typeName="double" name="rotation"
        isConst="false" />
      </variant>
    </constructor>
    <method name="getType" cppName="getType" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="RS::EntityType" isPureVirtual="false" />
    </method>
    <method name="getBoundingBox" cppName="getBoundingBox"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="RBox" isPureVirtual="false">
        <arg type="bool" typeName="bool" name="ignoreEmpty"
        hasDefault="true" default="false" isConst="false" />
      </variant>
    </method>
    <method name="isValid" cppName="isValid" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false" />
    </method>
    <method name="isSane" cppName="isSane" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false" />
    </method>
    <method name="setRotation" cppName="setRotation"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="double" typeName="double" name="r"
        isConst="false" />
      </variant>
    </method>
    <method name="getRotation" cppName="getRotation"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="double" isPureVirtual="false" />
    </method>
    <method name="getReferencePoints" cppName="getReferencePoints"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="QList &lt; RRefPoint &gt;"
      isPureVirtual="false">
        <arg type="RS::ProjectionRenderingHint"
        typeName="RS::ProjectionRenderingHint" name="hint"
        hasDefault="true" default="RS :: RenderTop"
        isConst="false" />
      </variant>
    </method>
    <method name="moveReferencePoint" cppName="moveReferencePoint"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false">
        <arg type="RVector &amp;" typeName="RVector"
        name="referencePoint" isConst="true" />
        <arg type="RVector &amp;" typeName="RVector"
        name="targetPoint" isConst="true" />
        <arg type="Qt::KeyboardModifiers"
        typeName="Qt::KeyboardModifiers" name="modifiers"
        hasDefault="true" default="Qt :: NoModifier"
        isConst="false" />
      </variant>
    </method>
    <method name="getDimPoints" cppName="getDimPoints"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="QList &lt; RVector &gt;"
      isPureVirtual="false" />
    </method>
    <method name="recomputeDefinitionPoint"
    cppName="recomputeDefinitionPoint" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="RVector &amp;" typeName="RVector"
        name="oldExtPoint1" isConst="true" />
        <arg type="RVector &amp;" typeName="RVector"
        name="oldExtPoint2" isConst="true" />
        <arg type="RVector &amp;" typeName="RVector"
        name="newExtPoint1" isConst="true" />
        <arg type="RVector &amp;" typeName="RVector"
        name="newExtPoint2" isConst="true" />
      </variant>
    </method>
    <method name="rotate" cppName="rotate" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false">
        <arg type="double" typeName="double" name="rotation"
        isConst="false" />
        <arg type="RVector &amp;" typeName="RVector" name="center"
        isConst="true" />
      </variant>
    </method>
    <method name="mirror" cppName="mirror" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false">
        <arg type="RLine &amp;" typeName="RLine" name="axis"
        isConst="true" />
      </variant>
    </method>
    <method name="getShapes" cppName="getShapes" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="QList &lt; QSharedPointer &lt; RShape &gt; &gt;"
      isPureVirtual="false">
        <arg type="RBox &amp;" typeName="RBox" name="queryBox"
        hasDefault="true" default="RDEFAULT_RBOX" isConst="true" />
        <arg type="bool" typeName="bool" name="ignoreComplex"
        hasDefault="true" default="false" isConst="false" />
        <arg type="bool" typeName="bool" name="segment"
        hasDefault="true" default="false" isConst="false" />
      </variant>
    </method>
    <method name="getMeasuredValue" cppName="getMeasuredValue"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="double" isPureVirtual="false" />
    </method>
    <method name="getAutoLabel" cppName="getAutoLabel"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="QString" isPureVirtual="false" />
    </method>
  </class>
</unit>
